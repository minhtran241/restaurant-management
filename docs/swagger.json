{
    "swagger": "2.0",
    "info": {
        "description": "Restaurant Management Service API using Gin framework.",
        "title": "Restaurant Management Service",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Minh Tran",
            "email": "trqminh24@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "get the status of server.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Show the status of server.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/foods": {
            "get": {
                "description": "Responds with the list of all foods as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "foods"
                ],
                "summary": "Get all foods",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Food"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Takes a food JSON and store in DB. Return saved JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "foods"
                ],
                "summary": "Store a new food",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Food"
                        }
                    }
                }
            }
        },
        "/foods/{food_id}": {
            "get": {
                "description": "Responds with the food with provided ID as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "foods"
                ],
                "summary": "Get single food by ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Food"
                        }
                    }
                }
            },
            "patch": {
                "description": "Takes a food JSON and update food stored in DB. Return saved JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "foods"
                ],
                "summary": "Update a food",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Food"
                        }
                    }
                }
            }
        },
        "/invoices": {
            "get": {
                "description": "Responds with the list of all invoices as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoices"
                ],
                "summary": "Get all invoices",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Invoice"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Takes a invoice JSON and store in DB. Return saved JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoices"
                ],
                "summary": "Store invoice by ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{invoice_id}": {
            "get": {
                "description": "Responds with the invoice with provided ID as JSON",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoices"
                ],
                "summary": "Get single invoice by ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Invoice"
                        }
                    }
                }
            },
            "patch": {
                "description": "Takes an invoice JSON and update invoice stored in DB. Return saved JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoices"
                ],
                "summary": "Update an invoice",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Invoice"
                        }
                    }
                }
            }
        },
        "/menus": {
            "get": {
                "description": "Responds with the list of all menus as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "menus"
                ],
                "summary": "Get all menus",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Menu"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Takes a menu JSON and store in DB. Return saved JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "menus"
                ],
                "summary": "Store a new menu",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Menu"
                        }
                    }
                }
            }
        },
        "/menus/{menu_id}": {
            "get": {
                "description": "Responds with the menu with provided ID as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "menus"
                ],
                "summary": "Get single menu by ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Menu"
                        }
                    }
                }
            },
            "patch": {
                "description": "Takes a menu JSON and update menu stored in DB. Return saved JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "menus"
                ],
                "summary": "Update a menu",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Menu"
                        }
                    }
                }
            }
        },
        "/orderItems": {
            "get": {
                "description": "Responds with the list of all foods as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orderItems"
                ],
                "summary": "Get all ordered items",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.OrderItem"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Takes a ordered item JSON and store in DB. Return saved JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orderItems"
                ],
                "summary": "Store a new ordered item",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OrderItem"
                        }
                    }
                }
            }
        },
        "/orderItems-order/{order_id}": {
            "get": {
                "description": "Responds with the ordered items of an order with provided order's ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orderItems"
                ],
                "summary": "Get ordered items order's ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.OrderItem"
                            }
                        }
                    }
                }
            }
        },
        "/orderItems/{order_item_id}": {
            "get": {
                "description": "Responds with the ordered item with provided ID as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orderItems"
                ],
                "summary": "Get single ordered item by ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OrderItem"
                        }
                    }
                }
            },
            "patch": {
                "description": "Takes a ordered item JSON and update ordered item stored in DB. Return saved JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orderItems"
                ],
                "summary": "Update a ordered item",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OrderItem"
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "description": "Responds with the list of all orders as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get all orders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Order"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Takes a order JSON and store in DB. Return saved JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Store a new order",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    }
                }
            }
        },
        "/orders/{order_id}": {
            "get": {
                "description": "Responds with the order with provided ID as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get single order by ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    }
                }
            },
            "patch": {
                "description": "Takes a order JSON and update order stored in DB. Return saved JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Update a order",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    }
                }
            }
        },
        "/tables": {
            "get": {
                "description": "Responds with the list of all tables as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tables"
                ],
                "summary": "Get all tables",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Table"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Takes a table JSON and store in DB. Return saved JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tables"
                ],
                "summary": "Store a new table",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Table"
                        }
                    }
                }
            }
        },
        "/tables/{table_id}": {
            "get": {
                "description": "Responds with the table with provided ID as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tables"
                ],
                "summary": "Get single table by ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Table"
                        }
                    }
                }
            },
            "patch": {
                "description": "Takes a table JSON and update table stored in DB. Return saved JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tables"
                ],
                "summary": "Update a table",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Table"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Responds with the list of all users as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Log a user in.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Log a user in..",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/users/signup": {
            "post": {
                "description": "Create a new user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/users/{user_id}": {
            "get": {
                "description": "Responds with the user with provided ID as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get single user by ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Food": {
            "type": "object",
            "required": [
                "food_image",
                "menu_id",
                "name"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "food_id": {
                    "type": "string"
                },
                "food_image": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "menu_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "price": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Invoice": {
            "type": "object",
            "required": [
                "payment_status"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "invoice_id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "payment_due_date": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                },
                "payment_status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Menu": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "food_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Order": {
            "type": "object",
            "required": [
                "order_date",
                "table_id"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "order_date": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "table_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.OrderItem": {
            "type": "object",
            "required": [
                "food_id",
                "order_id",
                "quantity",
                "unit_price"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "food_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "order_item_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "string"
                },
                "unit_price": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Table": {
            "type": "object",
            "required": [
                "number_of_guests",
                "table_number"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "number_of_guests": {
                    "type": "integer"
                },
                "table_id": {
                    "type": "string"
                },
                "table_number": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "required": [
                "Password",
                "email",
                "first_name",
                "last_name",
                "phone"
            ],
            "properties": {
                "Password": {
                    "type": "string",
                    "minLength": 6
                },
                "avatar": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "phone": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    }
}